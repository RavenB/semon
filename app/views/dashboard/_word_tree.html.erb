<script type="text/jsx">
  var wordForTree = ''; // initial
  var campaignTags = [];
  <% campaign_tags = @campaign.tags.where("t_count > 0").order(t_count: :desc).map(&:t_name).uniq %>
  <% if campaign_tags.present? %>
    wordForTree = '<%= campaign_tags.first %>';
    campaignTags = <%= raw campaign_tags.take(20) %>;
  <% end %>

  function wordTree() {
    // react code goes here
    /** @jsx React.DOM */
    var WordTree = React.createClass({
      mixins: [SetIntervalMixin], // Use the mixin
      render: function() {
        return (
          <div>
            <select className='form-control word-picker' onChange={this.handleChange}>
              {
                campaignTags.map(function (tag) {
                  return <option value={tag}>{tag}</option>
                })
              }
            </select>
            <div id='word-tree-chart' style={{ height: 400 }}><span>Bitte warten...</span></div>
          </div>
        );
      },
      componentDidMount: function() {
        this.drawCharts();
        // call a method on the mixin to update the chart after given time
        this.setInterval(this.drawCharts, FIVE_MINUTES);
      },
      drawCharts: function() {
        // show loading spinner on process start
        $('#loading-spinner').removeClass('hidden');
        var options = {
          wordtree: {
            word: wordForTree,
            format: 'implicit',
            type: 'double'
          }
        };
        var chart = new google.visualization.WordTree(
          document.getElementById('word-tree-chart')
        );

        var ajax_options = {
          dataType: 'json',
          url: '/dashboard/<%= @campaign.id %>/word_tree'
        };
        $.ajax(ajax_options).done(function (data) {
          var data = google.visualization.arrayToDataTable($.parseJSON(data.responseText));
          chart.draw(data, options);
          // hide loading spinner on process finish
          $('#loading-spinner').addClass('hidden');
        });
      },
      handleChange: function(event) {
        wordForTree = event.target.value;
        this.drawCharts();
      }
    });

    React.render(
      <WordTree/>,
      document.getElementById('word-tree')
    );
  }
</script>
